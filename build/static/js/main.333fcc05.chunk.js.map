{"version":3,"sources":["home/home.js","auth/auth.js","cert/cert.js","App.js","user/data.js","courses/courses.js","registerServiceWorker.js","index.js"],"names":["database","usr","config","nu","instance","user","Object","classCallCheck","this","userData","udata","cname","date","uno","name","uid","pageCode","Courses","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","handleSubmit","bind","assertThisInitialized","event","Date","getDate","month","getMonth","year","getFullYear","title","onEvent","react_default","a","createElement","className","onClick","id","Component","Home","firebase","courses","AsyncStorage","getItem","then","result","email","forceUpdate","catch","err","ref","on","snapshot","val","console","log","arr","course","push","setState","undefined","target","setItem","_this2","src","alt","class","map","cour","src_courses_courses","Auth","info","status","handleEmailChange","handlePasswordChange","value","password","signInWithEmailAndPassword","data","products","alert","type","onChange","placeholder","Cert","myFunction","window","print","setTimeout","App","getView","cert_cert","onEventHander","home_home","auth_auth","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.333fcc05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { AsyncStorage } from \"AsyncStorage\";\nimport \"./home.css\";\nimport user from \"../user/data\";\nimport Courses from \"../courses/courses\";\nimport * as firebase from \"firebase\";\n\nvar usr;\n\nvar database;\n\nclass Home extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n\n    database = firebase.database();\n    this.state = {\n      courses: []\n    };\n    usr = new user();\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    // database.ref(usr.userData.udata.uid + \"/name\").on(\"value\", snapshot => {\n    //   usr.userData.udata.name = snapshot.val();\n    //   console.log(usr.userData.udata.name);\n    //   this.forceUpdate();\n    // });\n    //Get the user email address\n    AsyncStorage.getItem(\"email\")\n      .then(result => {\n        new user().userData.udata.email = result;\n        this.forceUpdate();\n      })\n      .catch(err => {});\n\n    AsyncStorage.getItem(\"uid\")\n      .then(result => {\n        if (result) {\n          new user().userData.udata.uid = result;\n          // console.log(result);\n          database.ref(result + \"/\").on(\"value\", snapshot => {\n            //courses = snapshot.val();\n\n            new user().userData.udata.name = snapshot.val().name;\n            console.log(snapshot.val().name);\n            var courses = snapshot.val().courses;\n            var arr = [];\n            for (var course in courses) {\n              arr.push(courses[course]);\n            }\n            this.setState({ courses: arr });\n\n            this.forceUpdate();\n          });\n        }\n        this.forceUpdate();\n      })\n      .catch(err => {});\n  }\n\n  componentWillUnmount() {\n    new user().userData.pageCode = \"2\";\n  }\n\n  handleSubmit(event) {\n    if (event.target != undefined && event.target.id == \"lo\") {\n      this.props.onEvent({ pageCode: \"1\" });\n      this.forceUpdate();\n      AsyncStorage.setItem(\"pageCode\", \"1\");\n    } else this.props.onEvent(event);\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\" jumbotron text-center shadow bg-dark text-white header\">\n          <div>Certificate Generation Home</div>\n        </div>\n\n        <div className=\" container  row\">\n          <div className=\"  card col-6 shadow-lg\">\n            <img\n              src={\"https://picsum.photos/200/300/?random\"}\n              alt=\"John\"\n              className=\" myimg\"\n            />\n            <p className=\" titl\">{new user().userData.udata.name}</p>\n            <button\n              onClick={this.handleSubmit}\n              id={\"lo\"}\n              className=\" btn-warning \"\n            >\n              <span class=\"glyphicon glyphicon-log-out\" /> Sign out\n            </button>\n          </div>\n          <div className=\"  col-6\">\n            {this.state.courses.map(cour => {\n              return <Courses title={cour} onEvent={this.handleSubmit} />;\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./auth.css\";\nimport { AsyncStorage } from \"AsyncStorage\";\nimport * as firebase from \"firebase\";\nimport user from \"../user/data\";\n\nvar usr;\nclass Auth extends Component {\n  state = { info: \" \" };\n\n  constructor(props) {\n    super(props);\n    this.state = { status: \" \" };\n\n    usr = new user();\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleEmailChange(event) {\n    //this.setState({ email: event.target.value });\n    usr.userData.udata.email = event.target.value;\n  }\n  handlePasswordChange(event) {\n    //this.setState({ password: event.target.value });\n    usr.userData.udata.password = event.target.value;\n  }\n\n  handleSubmit(event) {\n    //Check the password and user name\n    //if true get the data\n    //send the data to event\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(\n        usr.userData.udata.email,\n        usr.userData.udata.password\n      )\n      .then(data => {\n        // console.log(data.user.uid);\n        usr.userData.udata.uid = data.user.uid;\n        AsyncStorage.setItem(\"uid\", data.user.uid);\n        AsyncStorage.setItem(\"email\", data.user.email);\n        var result = { data: { pageCode: \"2\" } };\n        this.props.onEvent(result.data);\n        this.setState({ products: result.data });\n        // console.log(result);\n\n        AsyncStorage.setItem(\"pageCode\", \"2\");\n        if (result.data.pageCode != \"2\") alert(\"incorrect email or password\");\n      })\n      .catch(err => {\n        AsyncStorage.setItem(\"pageCode\", \"1\");\n        alert(\"incorrect email or password\");\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"box \">\n        <img className=\"img_bg\" src={\"./login_bg.jpg\"} />\n        <div className=\"title text-center text-white\">\n          Certificate Generation\n        </div>\n        <div className=\"form \">\n          <div className=\"text-center text-white mh\">Login</div>\n          <input\n            type=\"emal\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleEmailChange}\n            placeholder=\"Email id\"\n            className=\"inp\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={this.handlePasswordChange}\n            value={this.state.password}\n            placeholder=\"Password\"\n            className=\"inp\"\n          />\n          {/* <div className=\"status-txt\" value={this.state.status} /> */}\n          <input\n            type=\"submit\"\n            onClick={this.handleSubmit}\n            name=\"submit\"\n            className=\"sbtn inp btn-primary\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Auth;\n\n/*\n  if the user email and password is correct then the person obj is send to the app. with pageCode:2\n\n  TODO\n  have to include data base api\n*/\n","import React, { Component } from \"react\";\nimport \"./cert.css\";\nimport \"./../user/data\";\nimport user from \"./../user/data\";\n\nvar usr;\nclass Cert extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    usr = new user();\n    console.log(usr);\n    this.myFunction = this.myFunction.bind(this);\n  }\n\n  myFunction() {\n    window.print();\n  }\n\n  componentWillMount() {\n    window.setTimeout(this.myFunction, 1000);\n  }\n  render() {\n    return (\n      <div className=\"card text-dark m-4 \">\n        <img src={\"./Certif.png\"} alt=\"Snow\" className=\"make-a-4\" />\n        <div className=\"t1\">\n          <div className=\"d\">\n            CERTIFICATE OF <br />\n            ACHIEVEMENT\n          </div>\n        </div>\n        <div className=\"t2\">\n          <div className=\"d\">{new user().userData.udata.cname}</div>\n        </div>\n        <div className=\"t3\">\n          <div className=\"d\">THIS IS TO CERTIFY THAT</div>\n        </div>\n        <div className=\"t4 \">\n          <div>{new user().userData.udata.name}</div>\n        </div>\n        <div className=\"t5\">\n          <div className=\"d\">\n            Has successfully completed and undergone an Internship program\n            offered <br /> <b>by Saarthi Career</b>\n          </div>\n        </div>\n        <div className=\"t6\">\n          <div>\n            Date:{new user().userData.udata.date}\n            <br />\n            {new user().userData.udata.uid}\n          </div>\n        </div>\n        <div className=\"t7\">\n          <div>\n            Khushboo Murarka, Director <br /> Your Career Navigator Pvt Ltd\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cert;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Home from \"./home/home\";\nimport Auth from \"./auth/auth\";\nimport Cert from \"./cert/cert\";\nimport user from \"./user/data\";\nimport * as firebase from \"firebase\";\nimport { AsyncStorage } from \"AsyncStorage\";\nvar config;\nvar nu;\nclass App extends Component {\n  constructor(props) {\n    nu = new user();\n\n    super(props);\n    config = {\n      apiKey: \"AIzaSyDd1nOUq16xjTVQ300G9Sqfg2c-bbq8ttU\",\n      authDomain: \"certificate-5448e.firebaseapp.com\",\n      databaseURL: \"https://certificate-5448e.firebaseio.com\",\n      projectId: \"certificate-5448e\",\n      storageBucket: \"certificate-5448e.appspot.com\",\n      messagingSenderId: \"361973650141\"\n    };\n    firebase.initializeApp(config);\n    this.state = {\n      udata: new user().userData.udata\n    };\n\n    //TODO get pagecode\n    AsyncStorage.getItem(\"pageCode\")\n      .then(result => {\n        if (nu.userData.pageCode != result) {\n          nu.userData.pageCode = result;\n          this.forceUpdate();\n        }\n      })\n      .catch(err => {});\n\n    this.onEventHander = this.onEventHander.bind(this);\n  }\n\n  onEventHander(event) {\n    nu.userData.pageCode = event.pageCode;\n    this.forceUpdate();\n  }\n\n  getView = () => {\n    if (nu.userData.pageCode == \"3\") {\n      return <Cert onEvent={this.onEventHander} udata={this.setState.udata} />; //3\n    } else if (nu.userData.pageCode == \"2\") {\n      return <Home onEvent={this.onEventHander} />; //2\n    } else {\n      return <Auth onEvent={this.onEventHander} />; //1\n    }\n  };\n\n  getView = this.getView.bind(this);\n\n  render() {\n    return this.getView();\n  }\n}\n\nexport default App;\n","var instance = null;\nclass user {\n  userData = {\n    udata: {\n      cname: \" \",\n      date: \"\",\n      uno: \"SXFP-CHYK-ONI6-S89U\",\n      name: \"\",\n      uid: \"\"\n    },\n    pageCode: \"1\"\n  };\n  constructor() {\n    if (!instance) {\n      instance = this;\n    } else return instance;\n  }\n}\n\nexport default user;\n","import React, { Component } from \"react\";\nimport \"./courses.css\";\nimport user from \"../user/data\";\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    var usr = new user();\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n    usr.userData.udata.date = date + \"-\" + month + \"-\" + year;\n\n    usr.userData.udata.cname = this.props.title;\n    this.props.onEvent({ pageCode: \"3\" });\n  }\n\n  render() {\n    return (\n      <div className=\"  \">\n        <div className=\" card shadow-lg\">\n          <p className=\" titl\">{this.props.title}</p>\n\n          <button\n            onClick={this.handleSubmit}\n            id={\"c2p\"}\n            className=\" btn-warning \"\n          >\n            Generate\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Courses;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n// import \"./css/bootstrap.css\";\n// import \"./css/bootstrap.min.css\";\n\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}